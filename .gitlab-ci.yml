variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install -q -y"

stages:
  - pre
  - build
  - test
  - deploy

pre-commit_alpine:
  stage: pre
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache bash gcc git musl-dev npm py3-pip python3-dev
    - pip install pre-commit
    # run pre-commit
    - pre-commit --version
    - pre-commit run --all-files

pycodestyle_alpine:
  stage: pre
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache py3-pycodestyle
    # check PEP 8 code style (pycodestyle was formerly called pep8)
    - pycodestyle --version
    - pycodestyle --show-source --show-pep8 --statistics $(find -name "*.py")

pylint_alpine:
  stage: pre
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache py3-pylint py3-setuptools py3-pytest
    # run pylint
    - pylint --version
    - pylint --persistent n $(find -name "*.py")
    - echo -e "\nskipped files:"
    - echo -e "$(grep -irl skip-file *)"

pylint_debian:
  stage: pre
  image:
    # https://hub.docker.com/_/debian
    name: debian:latest
  script:
    - date
    - cat /etc/os-release
    - apt-get update
    - $APT_GET_INSTALL pylint3 python3-pytest
    # run pylint
    - pylint --version
    - pylint --errors-only --persistent n $(find -name "*.py")
    - echo -e "\nskipped files:"
    - echo -e "$(grep -irl skip-file)"

.debian_based_unittest_template: &debian_based_unittest
  stage: test
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  parallel:
    matrix:
      - install_method:
          - basic
          - pip
  script:
    - date
    - cat /etc/os-release
    - apt-get update
    - test 'basic' = $install_method && $APT_GET_INSTALL python3-setuptools hashdeep
    - test 'pip' = $install_method && $APT_GET_INSTALL python3-setuptools python3-pip hashdeep
    - env python3 setup.py check_modules
    - test 'basic' = $install_method && python3 setup.py install
    - test 'pip' = $install_method && pip3 install .
    # run pfu
    - which pfu
    - pfu -h
    - pfu simscrub -h
    - pfu create_checksum -h
    - pfu check_checksum -h
    - pfu replicate -h
    - pfu speed_test -h
    # unittest
    - env python3 setup.py run_unittest
    # install dependencies for pytest
    - $APT_GET_INSTALL python3-pytest python3-pytest-cov python3-pytest-xdist
    # pytest
    - env python3 setup.py run_pytest --parallel --coverage

ubuntu:20.04_unittest:
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:20.04
  <<: *debian_based_unittest

ubuntu:22.04_unittest:
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:22.04
  <<: *debian_based_unittest

ubuntu:latest_unittest:
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:latest
  <<: *debian_based_unittest

debian:latest_unittest:
  image:
    # https://hub.docker.com/_/debian
    name: debian:latest
  <<: *debian_based_unittest

i386_debian:latest_unittest:
  image:
    # https://hub.docker.com/_/debian
    name: i386/debian:latest
  <<: *debian_based_unittest

.suse_based_unittest_template: &suse_based_unittest
  stage: test
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - date
    - cat /etc/os-release
    - zypper --non-interactive install which python3 python3-pip python3-setuptools python3-pytest python3-pytest-cov python3-pytest-xdist hashdeep
    - env python3 -V
    - env python3 setup.py check_modules
    - env python3 setup.py install --record installed_files.txt
    - pfu -h
    - xargs rm -rf < installed_files.txt
    - pip3 install .
    - pfu -h
    - pfu simscrub -h
    - pfu create_checksum -h
    - pfu check_checksum -h
    - pfu replicate -h
    - pfu speed_test -h
    - env python3 setup.py run_unittest
    - env python3 setup.py run_pytest --parallel --coverage

opensuse_leap:15.4_unittest:
  image:
    # https://hub.docker.com/r/opensuse/leap
    name: opensuse/leap:15.4
  <<: *suse_based_unittest

opensuse_leap:15.5_unittest:
  image:
    # https://hub.docker.com/r/opensuse/leap
    name: opensuse/leap:15.4
  <<: *suse_based_unittest

opensuse_leap:latest_unittest:
  image:
    # https://hub.docker.com/r/opensuse/leap
    name: opensuse/leap:latest
  <<: *suse_based_unittest

freebsd:13:
  stage: test
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - FreeBSD-13-amd64
  script:
    - date
    - cat /etc/os-release
    - freebsd-version
    - pkg -v
    - pkg install -y devel/py-setuptools devel/py-pytest devel/py-pytest-cov devel/py-pip
    - pip install .
    - which pfu
    - pfu -h
    - pfu simscrub -h
    - pfu create_checksum -h
    - pfu check_checksum -h
    - pfu replicate -h
    - pfu speed_test -h
    - python3.9 setup.py run_unittest
    - python3.9 setup.py run_pytest --coverage

deploy_to_github:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache git openssh
    - mkdir ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    - mv $github_deploy_key ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
    - repopath=$(mktemp -d)
    - git clone --mirror ${CI_REPOSITORY_URL} $repopath
    - (cd $repopath && git push --prune --mirror git@github.com:dlr-pa/pfu.git)
